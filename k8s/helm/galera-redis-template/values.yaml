global:
  hostnameBase:
  hostnameAlias:
  redis:
    password:

image:
  repository:
  pullPolicy: IfNotPresent
  tag: ""

nameOverride:
fullnameOverride:
gitlabName:
imagePullSecrets: []

commonLabels: {}
commonAnnotations: {}
setupJobAnnotations:
  "helm.sh/hook": post-install,pre-upgrade
  "helm.sh/hook-delete-policy": before-hook-creation
  "container.apparmor.security.beta.kubernetes.io/setup": runtime/default
migrationsJobAnnotations:
  "helm.sh/hook": post-install,post-upgrade
  "helm.sh/hook-delete-policy": before-hook-creation
  "container.apparmor.security.beta.kubernetes.io/migrations": runtime/default
podAnnotations: {}
deploymentAnnotations: {}
ingressAnnotations: {}

mariadbgalera:
  resources:
    requests:
      memory: 200Mi
    limits:
      memory: 700Mi
  password:
  podDisruptionBudget:
    create: true
    minAvailable: ""
    maxUnavailable: 1 
  podAntiAffinityPreset: soft
  mariadbConfiguration: |-
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [mysqld]
    default_storage_engine=InnoDB
    basedir=/opt/bitnami/mariadb
    datadir=/bitnami/mariadb/data
    plugin_dir=/opt/bitnami/mariadb/plugin
    tmpdir=/opt/bitnami/mariadb/tmp
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid_file=/opt/bitnami/mariadb/tmp/mysqld.pid
    bind_address=0.0.0.0

    ## Character set
    ##
    collation_server=utf8_unicode_ci
    init_connect='SET NAMES utf8'
    character_set_server=utf8

    ## MyISAM
    ##
    key_buffer_size=32M
    myisam_recover_options=FORCE,BACKUP

    ## Safety
    ##
    skip_host_cache
    skip_name_resolve
    max_allowed_packet=16M
    max_connect_errors=1000000
    sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE
    sysdate_is_now=1

    ## Binary Logging
    ##
    log_bin=mysql-bin
    expire_logs_days=14
    # Disabling for performance per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql
    sync_binlog=0
    # Required for Galera
    binlog_format=row

    ## Caches and Limits
    ##
    tmp_table_size=32M
    max_heap_table_size=32M
    # Re-enabling as now works with Maria 10.1.2
    query_cache_type=1
    query_cache_limit=4M
    query_cache_size=256M
    max_connections=5001
    thread_cache_size=50
    open_files_limit=65535
    table_definition_cache=4096
    table_open_cache=4096

    ## InnoDB
    ##
    innodb=FORCE
    innodb_strict_mode=1
    # Mandatory per https://github.com/codership/documentation/issues/25
    innodb_autoinc_lock_mode=2
    # Per https://www.percona.com/blog/2006/08/04/innodb-double-write/
    innodb_doublewrite=1
    innodb_flush_method=O_DIRECT
    innodb_log_files_in_group=2
    innodb_log_file_size=128M
    innodb_flush_log_at_trx_commit=1
    innodb_file_per_table=1
    # 80% Memory is default reco.
    # Need to re-evaluate when DB size grows
    innodb_buffer_pool_size=2G
    innodb_file_format=Barracuda

    ## Logging
    ##
    log_error=/opt/bitnami/mariadb/logs/mysqld.log
    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
    log_queries_not_using_indexes=1
    slow_query_log=1

    [galera]
    wsrep_on=ON
    wsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so
    wsrep_sst_method=mariabackup
    wsrep_slave_threads=4
    wsrep_cluster_address=gcomm://
    wsrep_cluster_name=galera
    wsrep_sst_auth="root:"
    # Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit
    innodb_flush_log_at_trx_commit=2
    # MYISAM REPLICATION SUPPORT #
    wsrep_replicate_myisam=ON

    [mariadb]
    plugin_load_add=auth_pam

  # initContainers:
  # - name: initcontainer
  #   image: bitnami/minideb
  #   command: ["sh", "-c", "/bin/sed -i 's/safe_to_bootstrap: 0/safe_to_bootstrap: 1/g' /bitnami/mariadb/data/grastate.dat"]
  #   volumeMounts:
  #     - name: data
  #       mountPath: /bitnami/mariadb

vendorBinPath: /application/vendor/bin

rediscluster:
  # FIX: cluster:fail from redis cluster
  # fullnameOverride: redis-cluster
  persistence:
    size: 128Mi
  podDisruptionBudget:
    maxUnavailable: 3
  # redis:
  #   resources:
  #     requests:
  #       cpu: 10m
  #       memory: 10Mi
  #     limits:
  #       cpu: 50m
  #       memory: 100Mi

redis:
  fullnameOverride: redis-standalone
  master:
    persistence:
      size: 128Mi
  slave:
    persistence:
      size: 128Mi


dataStorageClass: rook-cephfs-default
dataStorageSize: 100Mi
dataAccessMode: ReadWriteMany

cronjobs:
  expire_bonuses:
    resources:
      requests:
        cpu: 3m
        memory: 400Mi
      limits:
        cpu: 20m
        memory: 400Mi
  self_exclusion:
    resources:
      requests:
        cpu: 3m
        memory: 300Mi
      limits:
        cpu: 20m
        memory: 300Mi
  allocate_cashbacks:
    resources:
      requests:
        cpu: 3m
        memory: 300Mi
      limits:
        cpu: 20m
        memory: 300Mi
  galera_backup:
    resources:
      requests:
        cpu: 10m
        memory: 400Mi
      limits:
        cpu: 20m
        memory: 400Mi
ws:
  resources:
    requests:
      cpu: 5m
      memory: 600Mi
    limits:
      cpu: 20m
      memory: 600Mi
php_clear_cache:
  resources:
    requests:
      cpu: 5m
      memory: 70Mi
    limits:
      cpu: 40m
      memory: 200Mi    
mariadb:
  password:
  resources:
    requests:
      cpu: 10m        
      memory: 96Mi
    limits:
      cpu: 50m
      memory: 256Mi
php:
  replicas: 3
  resources:
    requests:
      cpu: 5m
      memory: 700Mi
    limits:
      cpu: 40m
      memory: 700Mi
  ingressProxyBodySize: 2m
  strategy: RollingUpdate
  oauth2TestClient:
  postaffiliatepro:
    enabled: false
  envs:
    SITE_URL:
  secretEnvs:
    SITE_SECRET:
  config: |
    <?php

    declare(strict_types=1);

    return [
    ];

ingressClassName:
setup: true
hpaEnabled: true
networkPolicy:
  wordpress:
    app:
    env:
